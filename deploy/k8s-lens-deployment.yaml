apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-lens-dashboard
  namespace: k8s-lens
  labels:
    app: k8s-lens
    component: dashboard
spec:
  replicas: 2
  selector:
    matchLabels:
      app: k8s-lens
      component: dashboard
  template:
    metadata:
      labels:
        app: k8s-lens
        component: dashboard
    spec:
      serviceAccountName: k8s-lens-service-account
      containers:
      - name: dashboard
        image: k8s-lens/dashboard:v1.0.0
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: KUBERNETES_SERVICE_HOST
          value: ""
        - name: KUBERNETES_SERVICE_PORT
          value: ""
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-lens-cli
  namespace: k8s-lens
  labels:
    app: k8s-lens
    component: cli
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-lens
      component: cli
  template:
    metadata:
      labels:
        app: k8s-lens
        component: cli
    spec:
      serviceAccountName: k8s-lens-service-account
      containers:
      - name: cli
        image: k8s-lens/cli:v1.0.0
        command: ["/bin/sleep"]
        args: ["infinity"]
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"